name: streama
services:
  streama-api:
    container_name: streama-api
    image: ghcr.io/claudiusayadi/streama-api:latest
    restart: unless-stopped
    ports:
      - '$API_PORT:$API_PORT'
    environment:
      API_PORT: $API_PORT
      API_PREFIX: $API_PREFIX
      API_URL: $API_URL
      APP_PORT: $APP_PORT
      APP_URL: $APP_URL
      DB_URL: $DB_URL
      EMAIL_FROM: $EMAIL_FROM
      EMAIL_HOST: $EMAIL_HOST
      EMAIL_PASSWORD: $EMAIL_PASSWORD
      EMAIL_PORT: $EMAIL_PORT
      EMAIL_SENDER: $EMAIL_SENDER
      EMAIL_USERNAME: $EMAIL_USERNAME
      HTTP_MAX_REDIRECTS: $HTTP_MAX_REDIRECTS
      HTTP_TIMEOUT: $HTTP_TIMEOUT
      JWT_COOKIES_TTL: $JWT_COOKIES_TTL
      JWT_SECRET: $JWT_SECRET
      JWT_TTL: $JWT_TTL
      NODE_ENV: $NODE_ENV
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SMTP_LOGIN: $SMTP_LOGIN
      SMTP_PASSWORD: $SMTP_PASSWORD
      SMTP_PORT: $SMTP_PORT
      SMTP_SERVER: $SMTP_SERVER
      THROTTLER_LIMIT: $THROTTLER_LIMIT
      THROTTLER_TTL: $THROTTLER_TTL
      TMDB_API_KEY: $TMDB_API_KEY
      TMDB_API_URL: $TMDB_API_URL
      TMDB_IMAGE_URL: $TMDB_IMAGE_URL
      TRAKT_API_URL: $TRAKT_API_URL
      TRAKT_CLIENT_ID: $TRAKT_CLIENT_ID
      TRAKT_CLIENT_SECRET: $TRAKT_CLIENT_SECRET
      TZ: $TZ
    networks:
      - pg
      - redis
    volumes:
      - ./upload:/usr/src/api/upload
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:$API_PORT/health']
      interval: 60s
      timeout: 30s
      retries: 3

  streama-app:
    container_name: streama-app
    image: ghcr.io/claudiusayadi/streama-app:latest
    restart: unless-stopped
    ports:
      - '$APP_PORT:$APP_PORT'
    environment:
      NEXT_PUBLIC_API_URL: $API_URL
      NODE_ENV: $NODE_ENV
      PORT: $APP_PORT
      TZ: $TZ
    depends_on:
      - streama-api
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:$APP_PORT']
      interval: 60s
      timeout: 30s
      retries: 3

networks:
  pg:
    external: true
  redis:
    external: true
