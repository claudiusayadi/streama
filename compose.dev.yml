name: streama
services:
  streama-api:
    container_name: streama-api-dev
    image: ghcr.io/claudiusayadi/streama-api:latest
    # build:
    #   context: ./api
    #   dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - '$API_PORT:$API_PORT'
    environment:
      NODE_ENV: $NODE_ENV
      DB_URL: $DB_URL
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: $JWT_SECRET
      JWT_EXPIRES_IN: $JWT_TTL
      TMDB_API_URL: $TMDB_API_URL
      TMDB_API_KEY: $TMDB_API_KEY
      THROTTLE_TTL: $THROTTLER_TTL
      THROTTLE_LIMIT: $THROTTLER_LIMIT
      TZ: $TZ
    networks:
      - db
    volumes:
      - ./api:/usr/src/api
      - /usr/src/api/node_modules # prevents host node_modules from overwriting container's
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:$API_PORT/health']
      interval: 60s
      timeout: 30s
      retries: 3

  streama-app:
    container_name: streama-app-dev
    image: ghcr.io/claudiusayadi/streama-app:latest
    # build:
    #   context: ./app
    #   dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - '$APP_PORT:$APP_PORT'
    environment:
      NODE_ENV: $NODE_ENV
      NEXT_PUBLIC_API_URL: http://localhost:$API_PORT/api/v1
      PORT: $APP_PORT
      TZ: $TZ
    depends_on:
      - streama-api
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules # prevents host node_modules from overwriting container's
      - /usr/src/app/.next # preserve Next.js cache
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:$APP_PORT']
      interval: 60s
      timeout: 30s
      retries: 3

networks:
  db:
    external: true
